// SSPから来るイベント

//----------------------------------------------------------------
// OnSecondChange
//----------------------------------------------------------------
string OnSecondChange(dict ref)
{
	// 表示待ちを処理
  string script = CheckWaitingList();

  // 全てのメッセージ
	array msg = ListUpAllMessageArray();

	// 条件達成か確認
	msg = CheckMessageCondition("",msg);

	if ( _aryvn(msg)>0 ) {
		// 条件を満たしたメッセージがある
		AddMessageWaitingList(msg);
	}

	if ( _strlen(script) > 0 ) {
		dictOptionalHeader["marker"] = version();
		dictOptionalHeader["script_option"] = "nobreak";
		return script;
	}
	else {
		return;
	}
}

//----------------------------------------------------------------
// ゴーストが起動した
//----------------------------------------------------------------
string OnGhostBoot(dict ref)
{
	// 起動したゴースト名
	string ghostname = TranslateSystemChar(ref["Reference1"]);

	// Ghost_Bootedを満たしたメッセージ
	array msg = PickUpMessageByCondition("Ghost_Booted",{ghostname});

	// Ghost_Booted以外の条件を満たしているか調べる
	msg = CheckMessageCondition("Ghost_Booted",msg);

	if ( _aryvn(msg)>0 ) {
		// 条件を満たしたメッセージがある
		AddMessageWaitingList(msg);
	}
}

//----------------------------------------------------------------
// インストール済みゴースト名のリストを保存する
//----------------------------------------------------------------
// スコープを一番外側に
array InstalledGhostNameList;

installedghostname(dict ref)
{
	// 変数を空にする
	InstalledGhostNameList = {};

	for ( int i=0; i<_dicvn(ref); i++ ) {
		if ( _gettype(ref["Reference"+i]) == "nil" ) {
			// 終了したら脱出
			return;
		}
		else {
			// 存在したら配列に追加
			InstalledGhostNameList += ref["Reference"+i];
		}
	}
}
